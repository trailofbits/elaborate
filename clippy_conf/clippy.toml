disallowed-methods = [
    { path = "std::env::current_dir", reason = "use `elaborate::std::env::current_dir_wc`" },
    { path = "std::env::current_exe", reason = "use `elaborate::std::env::current_exe_wc`" },
    { path = "std::env::home_dir", reason = "use `elaborate::std::env::home_dir_wc`" },
    { path = "std::env::join_paths", reason = "use `elaborate::std::env::join_paths_wc`" },
    { path = "std::env::set_current_dir", reason = "use `elaborate::std::env::set_current_dir_wc`" },
    { path = "std::env::var", reason = "use `elaborate::std::env::var_wc`" },
    { path = "std::env::var_os", reason = "use `elaborate::std::env::var_os_wc`" },
    { path = "std::ffi::OsStr::to_str", reason = "use `elaborate::std::ffi::OsStrContext::to_str_wc`" },
    { path = "std::ffi::OsString::try_reserve", reason = "use `elaborate::std::ffi::OsStringContext::try_reserve_wc`" },
    { path = "std::ffi::OsString::try_reserve_exact", reason = "use `elaborate::std::ffi::OsStringContext::try_reserve_exact_wc`" },
    { path = "std::fs::canonicalize", reason = "use `elaborate::std::fs::canonicalize_wc`" },
    { path = "std::fs::copy", reason = "use `elaborate::std::fs::copy_wc`" },
    { path = "std::fs::create_dir", reason = "use `elaborate::std::fs::create_dir_wc`" },
    { path = "std::fs::create_dir_all", reason = "use `elaborate::std::fs::create_dir_all_wc`" },
    { path = "std::fs::exists", reason = "use `elaborate::std::fs::exists_wc`" },
    { path = "std::fs::hard_link", reason = "use `elaborate::std::fs::hard_link_wc`" },
    { path = "std::fs::metadata", reason = "use `elaborate::std::fs::metadata_wc`" },
    { path = "std::fs::read", reason = "use `elaborate::std::fs::read_wc`" },
    { path = "std::fs::read_dir", reason = "use `elaborate::std::fs::read_dir_wc`" },
    { path = "std::fs::read_link", reason = "use `elaborate::std::fs::read_link_wc`" },
    { path = "std::fs::read_to_string", reason = "use `elaborate::std::fs::read_to_string_wc`" },
    { path = "std::fs::remove_dir", reason = "use `elaborate::std::fs::remove_dir_wc`" },
    { path = "std::fs::remove_dir_all", reason = "use `elaborate::std::fs::remove_dir_all_wc`" },
    { path = "std::fs::remove_file", reason = "use `elaborate::std::fs::remove_file_wc`" },
    { path = "std::fs::rename", reason = "use `elaborate::std::fs::rename_wc`" },
    { path = "std::fs::set_permissions", reason = "use `elaborate::std::fs::set_permissions_wc`" },
    { path = "std::fs::soft_link", reason = "use `elaborate::std::fs::soft_link_wc`" },
    { path = "std::fs::symlink_metadata", reason = "use `elaborate::std::fs::symlink_metadata_wc`" },
    { path = "std::fs::write", reason = "use `elaborate::std::fs::write_wc`" },
    { path = "std::fs::DirBuilder::create", reason = "use `elaborate::std::fs::DirBuilderContext::create_wc`" },
    { path = "std::fs::DirEntry::file_type", reason = "use `elaborate::std::fs::DirEntryContext::file_type_wc`" },
    { path = "std::fs::DirEntry::metadata", reason = "use `elaborate::std::fs::DirEntryContext::metadata_wc`" },
    { path = "std::fs::File::create", reason = "use `elaborate::std::fs::FileContext::create_wc`" },
    { path = "std::fs::File::create_buffered", reason = "use `elaborate::std::fs::FileContext::create_buffered_wc`" },
    { path = "std::fs::File::create_new", reason = "use `elaborate::std::fs::FileContext::create_new_wc`" },
    { path = "std::fs::File::lock", reason = "use `elaborate::std::fs::FileContext::lock_wc`" },
    { path = "std::fs::File::lock_shared", reason = "use `elaborate::std::fs::FileContext::lock_shared_wc`" },
    { path = "std::fs::File::metadata", reason = "use `elaborate::std::fs::FileContext::metadata_wc`" },
    { path = "std::fs::File::open", reason = "use `elaborate::std::fs::FileContext::open_wc`" },
    { path = "std::fs::File::open_buffered", reason = "use `elaborate::std::fs::FileContext::open_buffered_wc`" },
    { path = "std::fs::File::set_len", reason = "use `elaborate::std::fs::FileContext::set_len_wc`" },
    { path = "std::fs::File::set_modified", reason = "use `elaborate::std::fs::FileContext::set_modified_wc`" },
    { path = "std::fs::File::set_permissions", reason = "use `elaborate::std::fs::FileContext::set_permissions_wc`" },
    { path = "std::fs::File::set_times", reason = "use `elaborate::std::fs::FileContext::set_times_wc`" },
    { path = "std::fs::File::sync_all", reason = "use `elaborate::std::fs::FileContext::sync_all_wc`" },
    { path = "std::fs::File::sync_data", reason = "use `elaborate::std::fs::FileContext::sync_data_wc`" },
    { path = "std::fs::File::try_clone", reason = "use `elaborate::std::fs::FileContext::try_clone_wc`" },
    { path = "std::fs::File::try_lock", reason = "use `elaborate::std::fs::FileContext::try_lock_wc`" },
    { path = "std::fs::File::try_lock_shared", reason = "use `elaborate::std::fs::FileContext::try_lock_shared_wc`" },
    { path = "std::fs::File::unlock", reason = "use `elaborate::std::fs::FileContext::unlock_wc`" },
    { path = "std::fs::Metadata::accessed", reason = "use `elaborate::std::fs::MetadataContext::accessed_wc`" },
    { path = "std::fs::Metadata::created", reason = "use `elaborate::std::fs::MetadataContext::created_wc`" },
    { path = "std::fs::Metadata::modified", reason = "use `elaborate::std::fs::MetadataContext::modified_wc`" },
    { path = "std::fs::OpenOptions::open", reason = "use `elaborate::std::fs::OpenOptionsContext::open_wc`" },
    { path = "std::io::copy", reason = "use `elaborate::std::io::copy_wc`" },
    { path = "std::io::pipe", reason = "use `elaborate::std::io::pipe_wc`" },
    { path = "std::io::read_to_string", reason = "use `elaborate::std::io::read_to_string_wc`" },
    { path = "std::io::BufRead::fill_buf", reason = "use `elaborate::std::io::BufReadContext::fill_buf_wc`" },
    { path = "std::io::BufRead::has_data_left", reason = "use `elaborate::std::io::BufReadContext::has_data_left_wc`" },
    { path = "std::io::BufRead::read_line", reason = "use `elaborate::std::io::BufReadContext::read_line_wc`" },
    { path = "std::io::BufRead::read_until", reason = "use `elaborate::std::io::BufReadContext::read_until_wc`" },
    { path = "std::io::BufRead::skip_until", reason = "use `elaborate::std::io::BufReadContext::skip_until_wc`" },
    { path = "std::io::Error::get_mut", reason = "use `elaborate::std::io::ErrorContext::get_mut_wc`" },
    { path = "std::io::Error::get_ref", reason = "use `elaborate::std::io::ErrorContext::get_ref_wc`" },
    { path = "std::io::Error::into_inner", reason = "use `elaborate::std::io::ErrorContext::into_inner_wc`" },
    { path = "std::io::Error::raw_os_error", reason = "use `elaborate::std::io::ErrorContext::raw_os_error_wc`" },
    { path = "std::io::PipeReader::try_clone", reason = "use `elaborate::std::io::PipeReaderContext::try_clone_wc`" },
    { path = "std::io::PipeWriter::try_clone", reason = "use `elaborate::std::io::PipeWriterContext::try_clone_wc`" },
    { path = "std::io::Read::read", reason = "use `elaborate::std::io::ReadContext::read_wc`" },
    { path = "std::io::Read::read_buf", reason = "use `elaborate::std::io::ReadContext::read_buf_wc`" },
    { path = "std::io::Read::read_buf_exact", reason = "use `elaborate::std::io::ReadContext::read_buf_exact_wc`" },
    { path = "std::io::Read::read_exact", reason = "use `elaborate::std::io::ReadContext::read_exact_wc`" },
    { path = "std::io::Read::read_to_end", reason = "use `elaborate::std::io::ReadContext::read_to_end_wc`" },
    { path = "std::io::Read::read_to_string", reason = "use `elaborate::std::io::ReadContext::read_to_string_wc`" },
    { path = "std::io::Read::read_vectored", reason = "use `elaborate::std::io::ReadContext::read_vectored_wc`" },
    { path = "std::io::Seek::rewind", reason = "use `elaborate::std::io::SeekContext::rewind_wc`" },
    { path = "std::io::Seek::seek", reason = "use `elaborate::std::io::SeekContext::seek_wc`" },
    { path = "std::io::Seek::seek_relative", reason = "use `elaborate::std::io::SeekContext::seek_relative_wc`" },
    { path = "std::io::Seek::stream_len", reason = "use `elaborate::std::io::SeekContext::stream_len_wc`" },
    { path = "std::io::Seek::stream_position", reason = "use `elaborate::std::io::SeekContext::stream_position_wc`" },
    { path = "std::io::Stdin::read_line", reason = "use `elaborate::std::io::StdinContext::read_line_wc`" },
    { path = "std::io::Write::flush", reason = "use `elaborate::std::io::WriteContext::flush_wc`" },
    { path = "std::io::Write::write", reason = "use `elaborate::std::io::WriteContext::write_wc`" },
    { path = "std::io::Write::write_all", reason = "use `elaborate::std::io::WriteContext::write_all_wc`" },
    { path = "std::io::Write::write_all_vectored", reason = "use `elaborate::std::io::WriteContext::write_all_vectored_wc`" },
    { path = "std::io::Write::write_vectored", reason = "use `elaborate::std::io::WriteContext::write_vectored_wc`" },
    { path = "std::net::TcpListener::accept", reason = "use `elaborate::std::net::TcpListenerContext::accept_wc`" },
    { path = "std::net::TcpListener::bind", reason = "use `elaborate::std::net::TcpListenerContext::bind_wc`" },
    { path = "std::net::TcpListener::local_addr", reason = "use `elaborate::std::net::TcpListenerContext::local_addr_wc`" },
    { path = "std::net::TcpListener::only_v6", reason = "use `elaborate::std::net::TcpListenerContext::only_v6_wc`" },
    { path = "std::net::TcpListener::set_nonblocking", reason = "use `elaborate::std::net::TcpListenerContext::set_nonblocking_wc`" },
    { path = "std::net::TcpListener::set_only_v6", reason = "use `elaborate::std::net::TcpListenerContext::set_only_v6_wc`" },
    { path = "std::net::TcpListener::set_ttl", reason = "use `elaborate::std::net::TcpListenerContext::set_ttl_wc`" },
    { path = "std::net::TcpListener::take_error", reason = "use `elaborate::std::net::TcpListenerContext::take_error_wc`" },
    { path = "std::net::TcpListener::try_clone", reason = "use `elaborate::std::net::TcpListenerContext::try_clone_wc`" },
    { path = "std::net::TcpListener::ttl", reason = "use `elaborate::std::net::TcpListenerContext::ttl_wc`" },
    { path = "std::net::TcpStream::connect", reason = "use `elaborate::std::net::TcpStreamContext::connect_wc`" },
    { path = "std::net::TcpStream::connect_timeout", reason = "use `elaborate::std::net::TcpStreamContext::connect_timeout_wc`" },
    { path = "std::net::TcpStream::linger", reason = "use `elaborate::std::net::TcpStreamContext::linger_wc`" },
    { path = "std::net::TcpStream::local_addr", reason = "use `elaborate::std::net::TcpStreamContext::local_addr_wc`" },
    { path = "std::net::TcpStream::nodelay", reason = "use `elaborate::std::net::TcpStreamContext::nodelay_wc`" },
    { path = "std::net::TcpStream::peek", reason = "use `elaborate::std::net::TcpStreamContext::peek_wc`" },
    { path = "std::net::TcpStream::peer_addr", reason = "use `elaborate::std::net::TcpStreamContext::peer_addr_wc`" },
    { path = "std::net::TcpStream::read_timeout", reason = "use `elaborate::std::net::TcpStreamContext::read_timeout_wc`" },
    { path = "std::net::TcpStream::set_linger", reason = "use `elaborate::std::net::TcpStreamContext::set_linger_wc`" },
    { path = "std::net::TcpStream::set_nodelay", reason = "use `elaborate::std::net::TcpStreamContext::set_nodelay_wc`" },
    { path = "std::net::TcpStream::set_nonblocking", reason = "use `elaborate::std::net::TcpStreamContext::set_nonblocking_wc`" },
    { path = "std::net::TcpStream::set_read_timeout", reason = "use `elaborate::std::net::TcpStreamContext::set_read_timeout_wc`" },
    { path = "std::net::TcpStream::set_ttl", reason = "use `elaborate::std::net::TcpStreamContext::set_ttl_wc`" },
    { path = "std::net::TcpStream::set_write_timeout", reason = "use `elaborate::std::net::TcpStreamContext::set_write_timeout_wc`" },
    { path = "std::net::TcpStream::shutdown", reason = "use `elaborate::std::net::TcpStreamContext::shutdown_wc`" },
    { path = "std::net::TcpStream::take_error", reason = "use `elaborate::std::net::TcpStreamContext::take_error_wc`" },
    { path = "std::net::TcpStream::try_clone", reason = "use `elaborate::std::net::TcpStreamContext::try_clone_wc`" },
    { path = "std::net::TcpStream::ttl", reason = "use `elaborate::std::net::TcpStreamContext::ttl_wc`" },
    { path = "std::net::TcpStream::write_timeout", reason = "use `elaborate::std::net::TcpStreamContext::write_timeout_wc`" },
    { path = "std::net::ToSocketAddrs::to_socket_addrs", reason = "use `elaborate::std::net::ToSocketAddrsContext::to_socket_addrs_wc`" },
    { path = "std::net::UdpSocket::bind", reason = "use `elaborate::std::net::UdpSocketContext::bind_wc`" },
    { path = "std::net::UdpSocket::broadcast", reason = "use `elaborate::std::net::UdpSocketContext::broadcast_wc`" },
    { path = "std::net::UdpSocket::connect", reason = "use `elaborate::std::net::UdpSocketContext::connect_wc`" },
    { path = "std::net::UdpSocket::join_multicast_v4", reason = "use `elaborate::std::net::UdpSocketContext::join_multicast_v4_wc`" },
    { path = "std::net::UdpSocket::join_multicast_v6", reason = "use `elaborate::std::net::UdpSocketContext::join_multicast_v6_wc`" },
    { path = "std::net::UdpSocket::leave_multicast_v4", reason = "use `elaborate::std::net::UdpSocketContext::leave_multicast_v4_wc`" },
    { path = "std::net::UdpSocket::leave_multicast_v6", reason = "use `elaborate::std::net::UdpSocketContext::leave_multicast_v6_wc`" },
    { path = "std::net::UdpSocket::local_addr", reason = "use `elaborate::std::net::UdpSocketContext::local_addr_wc`" },
    { path = "std::net::UdpSocket::multicast_loop_v4", reason = "use `elaborate::std::net::UdpSocketContext::multicast_loop_v4_wc`" },
    { path = "std::net::UdpSocket::multicast_loop_v6", reason = "use `elaborate::std::net::UdpSocketContext::multicast_loop_v6_wc`" },
    { path = "std::net::UdpSocket::multicast_ttl_v4", reason = "use `elaborate::std::net::UdpSocketContext::multicast_ttl_v4_wc`" },
    { path = "std::net::UdpSocket::peek", reason = "use `elaborate::std::net::UdpSocketContext::peek_wc`" },
    { path = "std::net::UdpSocket::peek_from", reason = "use `elaborate::std::net::UdpSocketContext::peek_from_wc`" },
    { path = "std::net::UdpSocket::peer_addr", reason = "use `elaborate::std::net::UdpSocketContext::peer_addr_wc`" },
    { path = "std::net::UdpSocket::read_timeout", reason = "use `elaborate::std::net::UdpSocketContext::read_timeout_wc`" },
    { path = "std::net::UdpSocket::recv", reason = "use `elaborate::std::net::UdpSocketContext::recv_wc`" },
    { path = "std::net::UdpSocket::recv_from", reason = "use `elaborate::std::net::UdpSocketContext::recv_from_wc`" },
    { path = "std::net::UdpSocket::send", reason = "use `elaborate::std::net::UdpSocketContext::send_wc`" },
    { path = "std::net::UdpSocket::send_to", reason = "use `elaborate::std::net::UdpSocketContext::send_to_wc`" },
    { path = "std::net::UdpSocket::set_broadcast", reason = "use `elaborate::std::net::UdpSocketContext::set_broadcast_wc`" },
    { path = "std::net::UdpSocket::set_multicast_loop_v4", reason = "use `elaborate::std::net::UdpSocketContext::set_multicast_loop_v4_wc`" },
    { path = "std::net::UdpSocket::set_multicast_loop_v6", reason = "use `elaborate::std::net::UdpSocketContext::set_multicast_loop_v6_wc`" },
    { path = "std::net::UdpSocket::set_multicast_ttl_v4", reason = "use `elaborate::std::net::UdpSocketContext::set_multicast_ttl_v4_wc`" },
    { path = "std::net::UdpSocket::set_nonblocking", reason = "use `elaborate::std::net::UdpSocketContext::set_nonblocking_wc`" },
    { path = "std::net::UdpSocket::set_read_timeout", reason = "use `elaborate::std::net::UdpSocketContext::set_read_timeout_wc`" },
    { path = "std::net::UdpSocket::set_ttl", reason = "use `elaborate::std::net::UdpSocketContext::set_ttl_wc`" },
    { path = "std::net::UdpSocket::set_write_timeout", reason = "use `elaborate::std::net::UdpSocketContext::set_write_timeout_wc`" },
    { path = "std::net::UdpSocket::take_error", reason = "use `elaborate::std::net::UdpSocketContext::take_error_wc`" },
    { path = "std::net::UdpSocket::try_clone", reason = "use `elaborate::std::net::UdpSocketContext::try_clone_wc`" },
    { path = "std::net::UdpSocket::ttl", reason = "use `elaborate::std::net::UdpSocketContext::ttl_wc`" },
    { path = "std::net::UdpSocket::write_timeout", reason = "use `elaborate::std::net::UdpSocketContext::write_timeout_wc`" },
    { path = "std::os::fd::BorrowedFd<'_>::try_clone_to_owned", reason = "use `elaborate::std::os::fd::BorrowedFdContext::try_clone_to_owned_wc`" },
    { path = "std::os::fd::OwnedFd::try_clone", reason = "use `elaborate::std::os::fd::OwnedFdContext::try_clone_wc`" },
    { path = "std::os::linux::net::SocketAddrExt::as_abstract_name", reason = "use `elaborate::std::os::linux::net::SocketAddrExtContext::as_abstract_name_wc`" },
    { path = "std::os::linux::net::SocketAddrExt::from_abstract_name", reason = "use `elaborate::std::os::linux::net::SocketAddrExtContext::from_abstract_name_wc`" },
    { path = "std::os::linux::net::TcpStreamExt::deferaccept", reason = "use `elaborate::std::os::linux::net::TcpStreamExtContext::deferaccept_wc`" },
    { path = "std::os::linux::net::TcpStreamExt::quickack", reason = "use `elaborate::std::os::linux::net::TcpStreamExtContext::quickack_wc`" },
    { path = "std::os::linux::net::TcpStreamExt::set_deferaccept", reason = "use `elaborate::std::os::linux::net::TcpStreamExtContext::set_deferaccept_wc`" },
    { path = "std::os::linux::net::TcpStreamExt::set_quickack", reason = "use `elaborate::std::os::linux::net::TcpStreamExtContext::set_quickack_wc`" },
    { path = "std::os::linux::net::UnixSocketExt::passcred", reason = "use `elaborate::std::os::linux::net::UnixSocketExtContext::passcred_wc`" },
    { path = "std::os::linux::net::UnixSocketExt::set_passcred", reason = "use `elaborate::std::os::linux::net::UnixSocketExtContext::set_passcred_wc`" },
    { path = "std::os::linux::process::ChildExt::pidfd", reason = "use `elaborate::std::os::linux::process::ChildExtContext::pidfd_wc`" },
    { path = "std::os::linux::process::PidFd::kill", reason = "use `elaborate::std::os::linux::process::PidFdContext::kill_wc`" },
    { path = "std::os::linux::process::PidFd::try_wait", reason = "use `elaborate::std::os::linux::process::PidFdContext::try_wait_wc`" },
    { path = "std::os::linux::process::PidFd::wait", reason = "use `elaborate::std::os::linux::process::PidFdContext::wait_wc`" },
    { path = "std::os::unix::fs::chown", reason = "use `elaborate::std::os::unix::fs::chown_wc`" },
    { path = "std::os::unix::fs::chroot", reason = "use `elaborate::std::os::unix::fs::chroot_wc`" },
    { path = "std::os::unix::fs::fchown", reason = "use `elaborate::std::os::unix::fs::fchown_wc`" },
    { path = "std::os::unix::fs::lchown", reason = "use `elaborate::std::os::unix::fs::lchown_wc`" },
    { path = "std::os::unix::fs::symlink", reason = "use `elaborate::std::os::unix::fs::symlink_wc`" },
    { path = "std::os::unix::fs::FileExt::read_at", reason = "use `elaborate::std::os::unix::fs::FileExtContext::read_at_wc`" },
    { path = "std::os::unix::fs::FileExt::read_exact_at", reason = "use `elaborate::std::os::unix::fs::FileExtContext::read_exact_at_wc`" },
    { path = "std::os::unix::fs::FileExt::read_vectored_at", reason = "use `elaborate::std::os::unix::fs::FileExtContext::read_vectored_at_wc`" },
    { path = "std::os::unix::fs::FileExt::write_all_at", reason = "use `elaborate::std::os::unix::fs::FileExtContext::write_all_at_wc`" },
    { path = "std::os::unix::fs::FileExt::write_at", reason = "use `elaborate::std::os::unix::fs::FileExtContext::write_at_wc`" },
    { path = "std::os::unix::fs::FileExt::write_vectored_at", reason = "use `elaborate::std::os::unix::fs::FileExtContext::write_vectored_at_wc`" },
    { path = "std::os::unix::net::SocketAddr::as_pathname", reason = "use `elaborate::std::os::unix::net::SocketAddrContext::as_pathname_wc`" },
    { path = "std::os::unix::net::SocketAddr::from_pathname", reason = "use `elaborate::std::os::unix::net::SocketAddrContext::from_pathname_wc`" },
    { path = "std::os::unix::net::UnixDatagram::bind", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::bind_wc`" },
    { path = "std::os::unix::net::UnixDatagram::bind_addr", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::bind_addr_wc`" },
    { path = "std::os::unix::net::UnixDatagram::connect", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::connect_wc`" },
    { path = "std::os::unix::net::UnixDatagram::connect_addr", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::connect_addr_wc`" },
    { path = "std::os::unix::net::UnixDatagram::local_addr", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::local_addr_wc`" },
    { path = "std::os::unix::net::UnixDatagram::pair", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::pair_wc`" },
    { path = "std::os::unix::net::UnixDatagram::peek", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::peek_wc`" },
    { path = "std::os::unix::net::UnixDatagram::peek_from", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::peek_from_wc`" },
    { path = "std::os::unix::net::UnixDatagram::peer_addr", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::peer_addr_wc`" },
    { path = "std::os::unix::net::UnixDatagram::read_timeout", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::read_timeout_wc`" },
    { path = "std::os::unix::net::UnixDatagram::recv", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::recv_wc`" },
    { path = "std::os::unix::net::UnixDatagram::recv_from", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::recv_from_wc`" },
    { path = "std::os::unix::net::UnixDatagram::recv_vectored_with_ancillary", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::recv_vectored_with_ancillary_wc`" },
    { path = "std::os::unix::net::UnixDatagram::recv_vectored_with_ancillary_from", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::recv_vectored_with_ancillary_from_wc`" },
    { path = "std::os::unix::net::UnixDatagram::send", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::send_wc`" },
    { path = "std::os::unix::net::UnixDatagram::send_to", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::send_to_wc`" },
    { path = "std::os::unix::net::UnixDatagram::send_to_addr", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::send_to_addr_wc`" },
    { path = "std::os::unix::net::UnixDatagram::send_vectored_with_ancillary", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::send_vectored_with_ancillary_wc`" },
    { path = "std::os::unix::net::UnixDatagram::send_vectored_with_ancillary_to", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::send_vectored_with_ancillary_to_wc`" },
    { path = "std::os::unix::net::UnixDatagram::set_mark", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::set_mark_wc`" },
    { path = "std::os::unix::net::UnixDatagram::set_nonblocking", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::set_nonblocking_wc`" },
    { path = "std::os::unix::net::UnixDatagram::set_read_timeout", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::set_read_timeout_wc`" },
    { path = "std::os::unix::net::UnixDatagram::set_write_timeout", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::set_write_timeout_wc`" },
    { path = "std::os::unix::net::UnixDatagram::shutdown", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::shutdown_wc`" },
    { path = "std::os::unix::net::UnixDatagram::take_error", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::take_error_wc`" },
    { path = "std::os::unix::net::UnixDatagram::try_clone", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::try_clone_wc`" },
    { path = "std::os::unix::net::UnixDatagram::unbound", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::unbound_wc`" },
    { path = "std::os::unix::net::UnixDatagram::write_timeout", reason = "use `elaborate::std::os::unix::net::UnixDatagramContext::write_timeout_wc`" },
    { path = "std::os::unix::net::UnixListener::accept", reason = "use `elaborate::std::os::unix::net::UnixListenerContext::accept_wc`" },
    { path = "std::os::unix::net::UnixListener::bind", reason = "use `elaborate::std::os::unix::net::UnixListenerContext::bind_wc`" },
    { path = "std::os::unix::net::UnixListener::bind_addr", reason = "use `elaborate::std::os::unix::net::UnixListenerContext::bind_addr_wc`" },
    { path = "std::os::unix::net::UnixListener::local_addr", reason = "use `elaborate::std::os::unix::net::UnixListenerContext::local_addr_wc`" },
    { path = "std::os::unix::net::UnixListener::set_nonblocking", reason = "use `elaborate::std::os::unix::net::UnixListenerContext::set_nonblocking_wc`" },
    { path = "std::os::unix::net::UnixListener::take_error", reason = "use `elaborate::std::os::unix::net::UnixListenerContext::take_error_wc`" },
    { path = "std::os::unix::net::UnixListener::try_clone", reason = "use `elaborate::std::os::unix::net::UnixListenerContext::try_clone_wc`" },
    { path = "std::os::unix::net::UnixStream::connect", reason = "use `elaborate::std::os::unix::net::UnixStreamContext::connect_wc`" },
    { path = "std::os::unix::net::UnixStream::connect_addr", reason = "use `elaborate::std::os::unix::net::UnixStreamContext::connect_addr_wc`" },
    { path = "std::os::unix::net::UnixStream::local_addr", reason = "use `elaborate::std::os::unix::net::UnixStreamContext::local_addr_wc`" },
    { path = "std::os::unix::net::UnixStream::pair", reason = "use `elaborate::std::os::unix::net::UnixStreamContext::pair_wc`" },
    { path = "std::os::unix::net::UnixStream::peek", reason = "use `elaborate::std::os::unix::net::UnixStreamContext::peek_wc`" },
    { path = "std::os::unix::net::UnixStream::peer_addr", reason = "use `elaborate::std::os::unix::net::UnixStreamContext::peer_addr_wc`" },
    { path = "std::os::unix::net::UnixStream::peer_cred", reason = "use `elaborate::std::os::unix::net::UnixStreamContext::peer_cred_wc`" },
    { path = "std::os::unix::net::UnixStream::read_timeout", reason = "use `elaborate::std::os::unix::net::UnixStreamContext::read_timeout_wc`" },
    { path = "std::os::unix::net::UnixStream::recv_vectored_with_ancillary", reason = "use `elaborate::std::os::unix::net::UnixStreamContext::recv_vectored_with_ancillary_wc`" },
    { path = "std::os::unix::net::UnixStream::send_vectored_with_ancillary", reason = "use `elaborate::std::os::unix::net::UnixStreamContext::send_vectored_with_ancillary_wc`" },
    { path = "std::os::unix::net::UnixStream::set_mark", reason = "use `elaborate::std::os::unix::net::UnixStreamContext::set_mark_wc`" },
    { path = "std::os::unix::net::UnixStream::set_nonblocking", reason = "use `elaborate::std::os::unix::net::UnixStreamContext::set_nonblocking_wc`" },
    { path = "std::os::unix::net::UnixStream::set_read_timeout", reason = "use `elaborate::std::os::unix::net::UnixStreamContext::set_read_timeout_wc`" },
    { path = "std::os::unix::net::UnixStream::set_write_timeout", reason = "use `elaborate::std::os::unix::net::UnixStreamContext::set_write_timeout_wc`" },
    { path = "std::os::unix::net::UnixStream::shutdown", reason = "use `elaborate::std::os::unix::net::UnixStreamContext::shutdown_wc`" },
    { path = "std::os::unix::net::UnixStream::take_error", reason = "use `elaborate::std::os::unix::net::UnixStreamContext::take_error_wc`" },
    { path = "std::os::unix::net::UnixStream::try_clone", reason = "use `elaborate::std::os::unix::net::UnixStreamContext::try_clone_wc`" },
    { path = "std::os::unix::net::UnixStream::write_timeout", reason = "use `elaborate::std::os::unix::net::UnixStreamContext::write_timeout_wc`" },
    { path = "std::os::wasi::fs::link", reason = "use `elaborate::std::os::wasi::fs::link_wc`" },
    { path = "std::os::wasi::fs::rename", reason = "use `elaborate::std::os::wasi::fs::rename_wc`" },
    { path = "std::os::wasi::fs::symlink", reason = "use `elaborate::std::os::wasi::fs::symlink_wc`" },
    { path = "std::os::wasi::fs::symlink_path", reason = "use `elaborate::std::os::wasi::fs::symlink_path_wc`" },
    { path = "std::os::wasi::fs::FileExt::advise", reason = "use `elaborate::std::os::wasi::fs::FileExtContext::advise_wc`" },
    { path = "std::os::wasi::fs::FileExt::allocate", reason = "use `elaborate::std::os::wasi::fs::FileExtContext::allocate_wc`" },
    { path = "std::os::wasi::fs::FileExt::create_directory", reason = "use `elaborate::std::os::wasi::fs::FileExtContext::create_directory_wc`" },
    { path = "std::os::wasi::fs::FileExt::fdstat_set_flags", reason = "use `elaborate::std::os::wasi::fs::FileExtContext::fdstat_set_flags_wc`" },
    { path = "std::os::wasi::fs::FileExt::fdstat_set_rights", reason = "use `elaborate::std::os::wasi::fs::FileExtContext::fdstat_set_rights_wc`" },
    { path = "std::os::wasi::fs::FileExt::metadata_at", reason = "use `elaborate::std::os::wasi::fs::FileExtContext::metadata_at_wc`" },
    { path = "std::os::wasi::fs::FileExt::read_at", reason = "use `elaborate::std::os::wasi::fs::FileExtContext::read_at_wc`" },
    { path = "std::os::wasi::fs::FileExt::read_exact_at", reason = "use `elaborate::std::os::wasi::fs::FileExtContext::read_exact_at_wc`" },
    { path = "std::os::wasi::fs::FileExt::read_link", reason = "use `elaborate::std::os::wasi::fs::FileExtContext::read_link_wc`" },
    { path = "std::os::wasi::fs::FileExt::read_vectored_at", reason = "use `elaborate::std::os::wasi::fs::FileExtContext::read_vectored_at_wc`" },
    { path = "std::os::wasi::fs::FileExt::remove_directory", reason = "use `elaborate::std::os::wasi::fs::FileExtContext::remove_directory_wc`" },
    { path = "std::os::wasi::fs::FileExt::remove_file", reason = "use `elaborate::std::os::wasi::fs::FileExtContext::remove_file_wc`" },
    { path = "std::os::wasi::fs::FileExt::tell", reason = "use `elaborate::std::os::wasi::fs::FileExtContext::tell_wc`" },
    { path = "std::os::wasi::fs::FileExt::write_all_at", reason = "use `elaborate::std::os::wasi::fs::FileExtContext::write_all_at_wc`" },
    { path = "std::os::wasi::fs::FileExt::write_at", reason = "use `elaborate::std::os::wasi::fs::FileExtContext::write_at_wc`" },
    { path = "std::os::wasi::fs::FileExt::write_vectored_at", reason = "use `elaborate::std::os::wasi::fs::FileExtContext::write_vectored_at_wc`" },
    { path = "std::os::wasi::fs::OpenOptionsExt::open_at", reason = "use `elaborate::std::os::wasi::fs::OpenOptionsExtContext::open_at_wc`" },
    { path = "std::os::windows::fs::junction_point", reason = "use `elaborate::std::os::windows::fs::junction_point_wc`" },
    { path = "std::os::windows::fs::symlink_dir", reason = "use `elaborate::std::os::windows::fs::symlink_dir_wc`" },
    { path = "std::os::windows::fs::symlink_file", reason = "use `elaborate::std::os::windows::fs::symlink_file_wc`" },
    { path = "std::os::windows::fs::FileExt::seek_read", reason = "use `elaborate::std::os::windows::fs::FileExtContext::seek_read_wc`" },
    { path = "std::os::windows::fs::FileExt::seek_write", reason = "use `elaborate::std::os::windows::fs::FileExtContext::seek_write_wc`" },
    { path = "std::os::windows::fs::MetadataExt::change_time", reason = "use `elaborate::std::os::windows::fs::MetadataExtContext::change_time_wc`" },
    { path = "std::os::windows::fs::MetadataExt::file_index", reason = "use `elaborate::std::os::windows::fs::MetadataExtContext::file_index_wc`" },
    { path = "std::os::windows::fs::MetadataExt::number_of_links", reason = "use `elaborate::std::os::windows::fs::MetadataExtContext::number_of_links_wc`" },
    { path = "std::os::windows::fs::MetadataExt::volume_serial_number", reason = "use `elaborate::std::os::windows::fs::MetadataExtContext::volume_serial_number_wc`" },
    { path = "std::os::windows::io::BorrowedHandle<'_>::try_clone_to_owned", reason = "use `elaborate::std::os::windows::io::BorrowedHandleContext::try_clone_to_owned_wc`" },
    { path = "std::os::windows::io::BorrowedSocket<'_>::try_clone_to_owned", reason = "use `elaborate::std::os::windows::io::BorrowedSocketContext::try_clone_to_owned_wc`" },
    { path = "std::os::windows::io::OwnedHandle::try_clone", reason = "use `elaborate::std::os::windows::io::OwnedHandleContext::try_clone_wc`" },
    { path = "std::os::windows::io::OwnedSocket::try_clone", reason = "use `elaborate::std::os::windows::io::OwnedSocketContext::try_clone_wc`" },
    { path = "std::os::windows::process::CommandExt::spawn_with_attributes", reason = "use `elaborate::std::os::windows::process::CommandExtContext::spawn_with_attributes_wc`" },
    { path = "std::panic::get_backtrace_style", reason = "use `elaborate::std::panic::get_backtrace_style_wc`" },
    { path = "std::path::absolute", reason = "use `elaborate::std::path::absolute_wc`" },
    { path = "std::path::Path::canonicalize", reason = "use `elaborate::std::path::PathContext::canonicalize_wc`" },
    { path = "std::path::Path::extension", reason = "use `elaborate::std::path::PathContext::extension_wc`" },
    { path = "std::path::Path::file_name", reason = "use `elaborate::std::path::PathContext::file_name_wc`" },
    { path = "std::path::Path::file_prefix", reason = "use `elaborate::std::path::PathContext::file_prefix_wc`" },
    { path = "std::path::Path::file_stem", reason = "use `elaborate::std::path::PathContext::file_stem_wc`" },
    { path = "std::path::Path::metadata", reason = "use `elaborate::std::path::PathContext::metadata_wc`" },
    { path = "std::path::Path::parent", reason = "use `elaborate::std::path::PathContext::parent_wc`" },
    { path = "std::path::Path::read_dir", reason = "use `elaborate::std::path::PathContext::read_dir_wc`" },
    { path = "std::path::Path::read_link", reason = "use `elaborate::std::path::PathContext::read_link_wc`" },
    { path = "std::path::Path::strip_prefix", reason = "use `elaborate::std::path::PathContext::strip_prefix_wc`" },
    { path = "std::path::Path::symlink_metadata", reason = "use `elaborate::std::path::PathContext::symlink_metadata_wc`" },
    { path = "std::path::Path::to_str", reason = "use `elaborate::std::path::PathContext::to_str_wc`" },
    { path = "std::path::Path::try_exists", reason = "use `elaborate::std::path::PathContext::try_exists_wc`" },
    { path = "std::path::PathBuf::try_reserve", reason = "use `elaborate::std::path::PathBufContext::try_reserve_wc`" },
    { path = "std::path::PathBuf::try_reserve_exact", reason = "use `elaborate::std::path::PathBufContext::try_reserve_exact_wc`" },
    { path = "std::process::Child::kill", reason = "use `elaborate::std::process::ChildContext::kill_wc`" },
    { path = "std::process::Child::try_wait", reason = "use `elaborate::std::process::ChildContext::try_wait_wc`" },
    { path = "std::process::Child::wait", reason = "use `elaborate::std::process::ChildContext::wait_wc`" },
    { path = "std::process::Child::wait_with_output", reason = "use `elaborate::std::process::ChildContext::wait_with_output_wc`" },
    { path = "std::process::Command::get_current_dir", reason = "use `elaborate::std::process::CommandContext::get_current_dir_wc`" },
    { path = "std::process::Command::output", reason = "use `elaborate::std::process::CommandContext::output_wc`" },
    { path = "std::process::Command::spawn", reason = "use `elaborate::std::process::CommandContext::spawn_wc`" },
    { path = "std::process::Command::status", reason = "use `elaborate::std::process::CommandContext::status_wc`" },
    { path = "std::process::ExitStatus::code", reason = "use `elaborate::std::process::ExitStatusContext::code_wc`" },
    { path = "std::process::ExitStatus::exit_ok", reason = "use `elaborate::std::process::ExitStatusContext::exit_ok_wc`" },
    { path = "std::process::ExitStatusError::code", reason = "use `elaborate::std::process::ExitStatusErrorContext::code_wc`" },
    { path = "std::process::ExitStatusError::code_nonzero", reason = "use `elaborate::std::process::ExitStatusErrorContext::code_nonzero_wc`" },
    { path = "std::thread::available_parallelism", reason = "use `elaborate::std::thread::available_parallelism_wc`" },
    { path = "std::thread::Builder::spawn", reason = "use `elaborate::std::thread::BuilderContext::spawn_wc`" },
    { path = "std::thread::Builder::spawn_scoped", reason = "use `elaborate::std::thread::BuilderContext::spawn_scoped_wc`" },
    { path = "std::thread::Builder::spawn_unchecked", reason = "use `elaborate::std::thread::BuilderContext::spawn_unchecked_wc`" },
    { path = "std::thread::Thread::name", reason = "use `elaborate::std::thread::ThreadContext::name_wc`" },
    { path = "std::time::Instant::checked_add", reason = "use `elaborate::std::time::InstantContext::checked_add_wc`" },
    { path = "std::time::Instant::checked_duration_since", reason = "use `elaborate::std::time::InstantContext::checked_duration_since_wc`" },
    { path = "std::time::Instant::checked_sub", reason = "use `elaborate::std::time::InstantContext::checked_sub_wc`" },
    { path = "std::time::SystemTime::checked_add", reason = "use `elaborate::std::time::SystemTimeContext::checked_add_wc`" },
    { path = "std::time::SystemTime::checked_sub", reason = "use `elaborate::std::time::SystemTimeContext::checked_sub_wc`" },
    { path = "std::time::SystemTime::duration_since", reason = "use `elaborate::std::time::SystemTimeContext::duration_since_wc`" },
    { path = "std::time::SystemTime::elapsed", reason = "use `elaborate::std::time::SystemTimeContext::elapsed_wc`" },
]
